1.Climbing Stairs

2.You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

Input n=4
OutSolution: 3+2=5

Input n=5
OutSolution: 5+3=8

solution:

public class Solution {
    public int ClimbStairs(int n) {
        if(n==0||n==1)
        {
            return 1;
        } 
        int[] array = new int[n];
        for(int i=0;i<n;i++)
        {
            if(i==0||i==1)
            {
                array[i]=i+1;
            } 
            if(i>=2)
            {
                array[i]=array[i-1]+array[i-2];
            }
        }
        return array[n-1];
    }
}

