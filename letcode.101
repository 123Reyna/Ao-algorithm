1.Symmetric Tree
2.Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).

For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

3.
    1
   / \
  2   2
 / \ / \
3  4 4  3
 

But the following [1,2,2,null,3,null,3] is not:

    1
   / \
  2   2
   \   \
   3    3
   
4.solution
public class Solution {
    public bool IsSymmetric(TreeNode root) {
        
        if(root==null)
            return true;
        return isSymmetricTwo(root.left,root.right);
        
    }
    
    public bool isSymmetricTwo(TreeNode left,TreeNode right)
    {
        if(left==null&&right==null)
            return true;
        else if (left == null || right==null) 
            return false;
        else if (left.val != right.val) 
            return false;
        else return isSymmetricTwo(left.left, right.right) && isSymmetricTwo(left.right, right.left);
    }
}
